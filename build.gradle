plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'


	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Database h2
	runtimeOnly 'com.h2database:h2'

	//spring test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.13.2'

	// jakarta( annotations, persistence (ORM) )
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	//aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// WebSocket
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'

	//ssession-jdbc
//	implementation 'org.springframework.session:spring-session-jdbc'

	//session
//	implementation 'org.springframework.session:spring-session-core'

	//Jsp

	//	JSTL
	implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상

	//tomcat
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled false
		csv.enabled false

// 리포트의 저장 경로를 설정합니다.
		html.destination file("jacoco/jacocoHtml")
		xml.destination file("jacoco/jacoco.xml")
	}
}

jacocoTestCoverageVerification {

	violationRules { // 커버리지의 범위와 퍼센테이지를 설정합니다.
		rule {
			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.90
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
